import glob
import os

os.chdir("D://SSO")
for file in glob.glob('*.txt'):
    print(file)
    
    from stat import S_ISREG,ST_CTIME,ST_MODE
import os,sys,time

#Relative or absolute path to the directory
dir_path = sys.argv[1] if len(sys.argv) == 2 else r'.'

#all entries in the directory w/ stats
data = (os.path.join(dir_path, fn) for fn in os.listdir(dir_path))
data = ((os.stat(path), path) for path in data)

# regular files, insert creation date
data = ((stat[ST_CTIME], path)
           for stat, path in data if S_ISREG(stat[ST_MODE]))

for cdate, path in sorted(data):
    print(time.ctime(cdate), os.path.basename(path))
    
    from os import walk
import os


listFileName = []
Endflies = []

for dirpath, dirnames,filenames in walk('D:\\SSO'):
        Endflies = listFileName + filenames
        print(filenames)


#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Jan 08, 2019 03:34:16 PM +07  platform: Windows NT

 
import sys
import sorting

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global che48
    che48 = tk.StringVar()

def CHECK():
    print('ListFileGUI_support.CHECK')
    sys.stdout.flush()

def Go():
    print(listFileName)
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import ListFileGUI
    ListFileGUI.vp_start_gui()

 #! /usr/bin/env python
 #  -*- coding: utf-8 -*-
 #
 # GUI module generated by PAGE version 4.19
 #  in conjunction with Tcl version 8.6
 #    Jan 08, 2019 03:24:08 PM +07  platform: Windows NT
 
import sys


try:
     import Tkinter as tk
except ImportError:
     import tkinter as tk
 
try:
     import ttk
     py3 = False
except ImportError:
     import tkinter.ttk as ttk
     py3 = True
 
import ListFileGUI_support
 
def vp_start_gui():
     '''Starting point when module is the main routine.'''
     global val, w, root
     root = tk.Tk()
     ListFileGUI_support.set_Tk_var()
     top = Toplevel1 (root)
     ListFileGUI_support.init(root, top)
     root.mainloop()
 
w = None
def create_Toplevel1(root, *args, **kwargs):
     '''Starting point when module is imported by another program.'''
     global w, w_win, rt
     rt = root
     w = tk.Toplevel (root)
     ListFileGUI_support.set_Tk_var()
     top = Toplevel1 (w)
     ListFileGUI_support.init(w, top, *args, **kwargs)
     return (w, top)
 
def destroy_Toplevel1():
     global w
     w.destroy()
     w = None
 
class Toplevel1:
     def __init__(self, top=None):
         '''This class configures and populates the toplevel window.
            top is the toplevel containing window.'''
         _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
         _fgcolor = '#000000'  # X11 color: 'black'
         _compcolor = '#d9d9d9' # X11 color: 'gray85'
         _ana1color = '#d9d9d9' # X11 color: 'gray85' 
         _ana2color = '#ececec' # Closest X11 color: 'gray92' 
 
         top.geometry("841x757+453+193")
         top.title("SHOW LIST PROGRAM")
         top.configure(background="#d9d9d9")
 
         self.Message1 = tk.Message(top)
         self.Message1.place(relx=0.071, rely=0.013, relheight=0.03
                 , relwidth=0.069)
         self.Message1.configure(background="#d9d9d9")
         self.Message1.configure(foreground="#000000")
         self.Message1.configure(highlightbackground="#d9d9d9")
         self.Message1.configure(highlightcolor="black")
         self.Message1.configure(text='''List Files''')
         self.Message1.configure(width=60)
 
         self.Listbox1 = tk.Listbox(top)
         self.Listbox1.place(relx=0.202, rely=0.066, relheight=0.822
                 , relwidth=0.754)
         self.Listbox1.configure(background="white")
         self.Listbox1.configure(disabledforeground="#a3a3a3")
         self.Listbox1.configure(font="TkFixedFont")
         self.Listbox1.configure(foreground="#000000")
         self.Listbox1.configure(width=634)
 
         self.Button1 = tk.Button(top)
         self.Button1.place(relx=0.131, rely=0.066, height=24, width=47)
         self.Button1.configure(activebackground="#ececec")
         self.Button1.configure(activeforeground="#000000")
         self.Button1.configure(background="#d9d9d9")
         self.Button1.configure(command=ListFileGUI_support.Go)
         self.Button1.configure(disabledforeground="#a3a3a3")
         self.Button1.configure(foreground="#000000")
         self.Button1.configure(highlightbackground="#d9d9d9")
         self.Button1.configure(highlightcolor="black")
         self.Button1.configure(pady="0")
         self.Button1.configure(text='''Button''')
 
         self.Checkbutton1 = tk.Checkbutton(top)
         self.Checkbutton1.place(relx=0.19, rely=0.013, relheight=0.033
                 , relwidth=0.084)
         self.Checkbutton1.configure(activebackground="#ececec")
         self.Checkbutton1.configure(activeforeground="#000000")
         self.Checkbutton1.configure(background="#d9d9d9")
         self.Checkbutton1.configure(command=ListFileGUI_support.CHECK)
         self.Checkbutton1.configure(disabledforeground="#a3a3a3")
         self.Checkbutton1.configure(foreground="#000000")
         self.Checkbutton1.configure(highlightbackground="#d9d9d9")
         self.Checkbutton1.configure(highlightcolor="black")
         self.Checkbutton1.configure(justify='left')
         self.Checkbutton1.configure(text='''Check''')
         self.Checkbutton1.configure(variable=ListFileGUI_support.che48)
         self.Checkbutton1.configure(width=71)
 
if __name__ == '__main__':
     vp_start_gui()
 
 


